// File: dataStore.js

import AsyncStorage from '@react-native-async-storage/async-storage';

const INITIAL_PATIENT_DATA = {
Â  '9182933812': {
Â  Â  id: '9182933812',
Â  Â  fullName: 'John Doe',
Â  Â  age: 35,
Â  Â  gender: 'Male',
Â  Â  contact: '9182933812',
Â  Â  // ðŸš€ ADDED 'state' FIELD FOR CONSISTENCY
Â  Â  state: 'Kerala', 
Â  Â  originDistrict: 'Kozhikode',
Â  Â  city: 'Anytown City',
Â  Â  village: 'Anytown Village',
Â  Â  migrantType: 'Returnee',
Â  Â  chronicDiseases: 'Diabetes, Hypertension',
Â  Â  pregnancyDetails: null,
Â  Â  returneeDetails: 'Returned from Dubai on 10/10/2023',
Â  Â  incomingDetails: null,
Â  Â  records: [],
Â  },
};

const INITIAL_DOCTOR_DATA = {
Â  'D12345': {
Â  Â  password: 'password123',
Â  Â  fullName: 'Dr. Jane Smith'
Â  }
};

const PATIENT_STORAGE_KEY = 'medicalRecordsApp';
const DOCTOR_STORAGE_KEY = 'doctorRecordsApp';


export const getPatientDatabase = async () => {
Â  try {
Â  Â  const jsonValue = await AsyncStorage.getItem(PATIENT_STORAGE_KEY);
Â  Â  const data = jsonValue != null ? JSON.parse(jsonValue) : INITIAL_PATIENT_DATA;
Â  Â  return data;
Â  } catch (e) {
Â  Â  console.error("Failed to load patient data from storage:", e);
Â  Â  return INITIAL_PATIENT_DATA;
Â  }
};

export const savePatientData = async (data) => {
Â  try {
Â  Â  const jsonValue = JSON.stringify(data);
Â  Â  await AsyncStorage.setItem(PATIENT_STORAGE_KEY, jsonValue);
Â  Â  console.log("Patient data successfully saved to storage.");
Â  } catch (e) {
Â  Â  console.error("Failed to save patient data to storage:", e);
Â  }
};

export const getDoctorDatabase = async () => {
Â  try {
Â  Â  const jsonValue = await AsyncStorage.getItem(DOCTOR_STORAGE_KEY);
Â  Â  const data = jsonValue != null ? JSON.parse(jsonValue) : INITIAL_DOCTOR_DATA;
Â  Â  return data;
Â  } catch (e) {
Â  Â  console.error("Failed to load doctor data from storage:", e);
Â  Â  return INITIAL_DOCTOR_DATA;
Â  }
};

export const addPatientToDatabase = async (phoneNumber, patientDetails) => {
Â  try {
Â  Â  const patientDatabase = await getPatientDatabase();
Â  Â  patientDatabase[phoneNumber] = patientDetails;
Â  Â  await savePatientData(patientDatabase);
Â  Â  console.log(`New patient ${phoneNumber} added and saved.`);
Â  } catch (e) {
Â  Â  console.error("Failed to add new patient to database:", e);
Â  }
};

export const updatePatientRecords = async (patientId, newRecord) => {
Â  const allPatients = await getPatientDatabase();
Â  const patient = Object.values(allPatients).find(
Â  Â  (p) => p.id.toLowerCase() === patientId.toLowerCase()
Â  );
Â  
Â  if (patient) {
Â  Â  if (!patient.records) {
Â  Â  Â  patient.records = [];
Â  Â  }
Â  Â  patient.records.unshift(newRecord);
Â  Â  await savePatientData(allPatients);
Â  } else {
Â  Â  console.error(`Patient with ID ${patientId} not found in database.`);
Â  }
};